name: run-tests
on:
  push:
  pull_request:
    branches:
      - 'master'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest click pytest-cov
      - name: Test with pytest
        run: pytest --cov=aparse --cov-report=xml --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      # - name: Upload pytest test results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: pytest-results-${{ matrix.python-version }}
      #     path: junit/test-results-${{ matrix.python-version }}.xml
      #   # Use always() to always run this step to publish test results when there are test failures
      #   if: ${{ always() }}
      #name: Example workflow for Codecov
      - name: Generate coverage report
        run: |
          pip install pytest
          pip install pytest-cov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: OS
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: python-${{ matrix.python-version }}
          verbose: true
